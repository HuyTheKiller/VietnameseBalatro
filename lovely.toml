[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Localization support for empty voucher slot text (vanilla)
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''{n=G.UIT.T, config={text = 'DEFEAT', scale = 0.6, colour = G.C.WHITE}}'''
position = "at"
payload = '''{n=G.UIT.T, config={text = localize('k_voucher_restock_1'), scale = 0.6, colour = G.C.WHITE}}'''
match_indent = true

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''{n=G.UIT.T, config={text = 'BOSS BLIND', scale = 0.4, colour = G.C.WHITE}}'''
position = "at"
payload = '''{n=G.UIT.T, config={text = localize('k_voucher_restock_2'), scale = 0.4, colour = G.C.WHITE}}'''
match_indent = true

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''{n=G.UIT.T, config={text = 'TO RESTOCK', scale = 0.4, colour = G.C.WHITE}}'''
position = "at"
payload = '''{n=G.UIT.T, config={text = localize('k_voucher_restock_3'), scale = 0.4, colour = G.C.WHITE}}'''
match_indent = true

# Localization support for empty voucher slot text (Cryptid)
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''{n=G.UIT.T, config={text = G.GAME.modifiers.cry_no_vouchers and (very_fair_quip[1] or '') or 'DEFEAT', scale = 0.6, colour = G.C.WHITE}}'''
position = "at"
payload = '''{n=G.UIT.T, config={text = G.GAME.modifiers.cry_no_vouchers and (very_fair_quip[1] or '') or localize('k_voucher_restock_1'), scale = 0.6, colour = G.C.WHITE}}'''
match_indent = true

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''{n=G.UIT.T, config={text = G.GAME.modifiers.cry_no_vouchers and (very_fair_quip[2] or '') or G.GAME.modifiers.cry_voucher_restock_antes and G.GAME.round_resets.ante % G.GAME.modifiers.cry_voucher_restock_antes == 0 and 'TWO BOSS BLINDS' or 'BOSS BLIND', scale = 0.4, colour = G.C.WHITE}}'''
position = "at"
payload = '''{n=G.UIT.T, config={text = G.GAME.modifiers.cry_no_vouchers and (very_fair_quip[2] or '') or G.GAME.modifiers.cry_voucher_restock_antes and G.GAME.round_resets.ante % G.GAME.modifiers.cry_voucher_restock_antes == 0 and localize('k_cry_voucher_restock_2') or localize('k_voucher_restock_2'), scale = 0.4, colour = G.C.WHITE}}'''
match_indent = true

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''{n=G.UIT.T, config={text = G.GAME.modifiers.cry_no_vouchers and (very_fair_quip[3] or '') or 'TO RESTOCK', scale = 0.4, colour = G.C.WHITE}}'''
position = "at"
payload = '''{n=G.UIT.T, config={text = G.GAME.modifiers.cry_no_vouchers and (very_fair_quip[3] or '') or localize('k_voucher_restock_3'), scale = 0.4, colour = G.C.WHITE}}'''
match_indent = true

# Allowing said text to appear on all languages (falls back to English if applicable)
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''elseif G.SETTINGS.language ~= 'en-us' then'''
position = "at"
payload = '''elseif false then'''
match_indent = true

# Patches to fix an issue where the way Balatro handles "Round score" text affects Vietnamese translation
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''contents.dollars_chips = {n=G.UIT.R, config={align = "cm",r=0.1, padding = 0,colour = G.C.DYN_UI.BOSS_MAIN, emboss = 0.05, id = 'row_dollars_chips'}, nodes={'''
position = "before"
payload = '''if G.SETTINGS.language ~= 'vi' then'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''contents.buttons = {'''
position = "before"
payload = '''
else
  contents.dollars_chips = {n=G.UIT.R, config={align = "cm",r=0.1, padding = 0,colour = G.C.DYN_UI.BOSS_MAIN, emboss = 0.05, id = 'row_dollars_chips'}, nodes={
    {n=G.UIT.C, config={align = "cm", padding = 0.1}, nodes={
      {n=G.UIT.C, config={align = "cm", minw = 1.3}, nodes={
        {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
          {n=G.UIT.T, config={text = localize('k_lower_score'), scale = 0.42, colour = G.C.UI.TEXT_LIGHT, shadow = true}}
        }},
        {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
          {n=G.UIT.T, config={text =localize('k_round'), scale = 0.42, colour = G.C.UI.TEXT_LIGHT, shadow = true}}
        }}
      }},
      {n=G.UIT.C, config={align = "cm", minw = 3.3, minh = 0.7, r = 0.1, colour = G.C.DYN_UI.BOSS_DARK}, nodes={
        {n=G.UIT.O, config={w=0.5,h=0.5 , object = stake_sprite, hover = true, can_collide = false}},
        {n=G.UIT.B, config={w=0.1,h=0.1}},
        {n=G.UIT.T, config={ref_table = G.GAME, ref_value = 'chips_text', lang = G.LANGUAGES['en-us'], scale = 0.85, colour = G.C.WHITE, id = 'chip_UI_count', func = 'chip_UI_set', shadow = true}}
      }}
    }}
  }}
end
'''
match_indent = true

# Patch to un-hardcode "Not Allowed!" text
# What kind of abomination is this? LocalThunk really knows how to trigger translators huh?
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''play_area_status_text("Not Allowed!")--localize('k_not_allowed_ex'), true)'''
position = "at"
payload = '''play_area_status_text(localize('k_not_allowed_ex'))'''
match_indent = true